"""
Django settings for api_cheems project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-za8efkt*6c=m7p+_q3rbt4n(%(!6--dfzmba%1t9-ht&_zsb%l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#Configuraciones de correo en Django para enviar los tokens
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' #Especifica el backend para enviar correos electrónicos. Se esta usando el backend SMTP por el momento (Protocolo Simple de Transferencia de Correo)
EMAIL_HOST = 'smtp.gmail.com' #Identifica la dirección del servidor SMTP por el momento gmail.
EMAIL_PORT = 587 #El puerto de la conexión SMTP (el estándar para TLS (Seguridad de la Capa de Transporte) en Gmail es 587)
EMAIL_HOST_USER = 'arevaloerik2705@gmail.com' #Definir el correo desde donde se enviaran los tokens
EMAIL_HOST_PASSWORD = '1076650495e' #La contraseña de dicho correo
EMAIL_USE_TLS = True #Hace el uso del TLS para la conexión
DEFAULT_FROM_EMAIL = 'arevaloerik2705@gmail.com' #El correo desde donde se enviaran los tokens por defecto

ALLOWED_HOSTS = []

# Linea para configurar el modelo personalizado de usuario
AUTH_USER_MODEL = 'api_app.Usuario'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'api_app',
    'corsheaders',
    'rest_framework_simplejwt.token_blacklist',
    'django_rest_passwordreset',
    'drf_yasg',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'api_cheems.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api_cheems.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'apicheemsdb',
        'USER': 'postgres',
        'PASSWORD': '1076650495',
        'HOST': 'localhost',
        'PORT': '5432',

    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración de JWT
SIMPLE_JWT = {
    # Duración de los tokens
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),  # Token de acceso válido por 1 hora
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),     # Token de actualización válido por 1 día
    'ROTATE_REFRESH_TOKENS': False,                  # No rotar tokens de actualización automáticamente
    'BLACKLIST_AFTER_ROTATION': True,                # Añadir tokens usados a la lista negra
    'UPDATE_LAST_LOGIN': False,                      # No actualizar último login

    # Configuración de algoritmos y claves
    'ALGORITHM': 'HS256',                            # Algoritmo de firma
    'SIGNING_KEY': SECRET_KEY,                       # Clave de firma (usando SECRET_KEY de Django)
    'VERIFYING_KEY': None,                           # Clave de verificación (no necesaria para HS256)
    'AUDIENCE': None,                                # Audiencia del token
    'ISSUER': None,                                  # Emisor del token

    # Configuración de headers y campos
    'AUTH_HEADER_TYPES': ('Bearer',),                # Tipo de header de autenticación
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',        # Nombre del header de autenticación
    'USER_ID_FIELD': 'id_usuario',                   # Campo usado como identificador de usuario
    'USER_ID_CLAIM': 'user_id',                      # Claim usado para el ID de usuario

    # Configuración de tipos de token
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),  # Clases de token permitidas
    'TOKEN_TYPE_CLAIM': 'token_type',                # Claim usado para el tipo de token

    # Configuración de JTI (JWT ID)
    'JTI_CLAIM': 'jti',                              # Claim usado para el ID único del token
}
